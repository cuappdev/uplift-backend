schema {
  query: Query
  mutation: Mutation
}

enum AccessibilityType {
  WHEELCHAIR
}

type Amenity {
  id: ID!
  gymId: Int!
  type: AmenityType!
}

enum AmenityType {
  SHOWERS
  LOCKERS
  PARKING
  ELEVATORS
}

type Capacity {
  id: ID!
  count: Int!
  facilityId: Int!
  percent: Float!
  updated: Int!
}

enum CourtType {
  BASKETBALL
  VOLLEYBALL
  BADMINTON
}

type Equipment {
  id: ID!
  name: String!
  equipmentType: EquipmentType!
  facilityId: Int!
  quantity: Int
  accessibility: AccessibilityType
}

enum EquipmentType {
  CARDIO
  RACKS_AND_BENCHES
  SELECTORIZED
  MULTI_CABLE
  FREE_WEIGHTS
  MISCELLANEOUS
  PLATE_LOADED
}

type Facility {
  id: ID!
  facilityType: FacilityType!
  gymId: Int!
  name: String!
  capacity: Capacity
  hours: [OpenHours]
  equipment: [Equipment]
}

enum FacilityType {
  FITNESS
  POOL
  BOWLING
  COURT
}

type Gym {
  id: ID!
  address: String!
  imageUrl: String
  latitude: Float!
  longitude: Float!
  name: String!
  amenities: [Amenity]
  facilities: [Facility]
  hours: [OpenHours]
}

type Mutation {
  createUser(giveawayId: Int, netId: String): createUser
}

type OpenHours {
  id: ID!
  courtType: CourtType
  endTime: Int!
  facilityId: Int
  gymId: Int
  isShallow: Boolean
  isSpecial: Boolean!
  isWomen: Boolean
  startTime: Int!
}

type Query {
  gyms: [Gym]
  usersByGiveawayid(id: Int): [User]
}

type User {
  id: ID!
  netId: String!
  giveawayId: Int
}

type createUser {
  user: User
}
